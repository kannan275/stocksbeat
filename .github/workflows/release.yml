name: ReleasePipeline

on:
  push:
    tags:
      - "v*"

jobs:
  release:
    runs-on: ubuntu-latest
    steps:
        - name: Set up Python 3.7
          uses: actions/setup-python@v2
          with:
            python-version: 3.7

        - name: Set up Go 1.x
          uses: actions/setup-go@v2
          with:
            go-version: ^1.13
          id: go

        - name: Check out code into the Go module directory
          uses: actions/checkout@v2

        - name: Get dependencies
          run: |
            go get -v -t -d ./...
            if [ -f Gopkg.toml ]; then
                curl https://raw.githubusercontent.com/golang/dep/master/install.sh | sh
                dep ensure
            fi
        
        - name: parse version
          id: parse_version
          run: echo ::set-output name=VERSION::${GITHUB_REF/refs\/tags\/v/}

        - name: Set version
          run: |
            chmod +x /home/runner/go/pkg/mod/github.com/elastic/beats/*/dev-tools/set_version
            chmod -R 0755 /home/runner/go/pkg/mod/github.com/elastic/beats/*/libbeat/version/version.go
            make set_version VERSION=${{ steps.parse_version.outputs.VERSION }}

        - name: Create release packages
          run: make release 
        
        - name: Create Release
          id: create_release
          uses: actions/create-release@v1
          env:
            GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
          with:
            tag_name: ${{ github.ref }}
            release_name: Release ${{ github.ref }}
            draft: false
            prerelease: false
        
        - name: Upload release assets
          uses: AButler/upload-release-assets@v2.0
          with:
            files: 'build/distributions/*'
            repo-token: ${{ secrets.GITHUB_TOKEN }}
            release-tag: ${{ github.ref }}
